{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"oMAiCeA,EA7BK,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAECC,mBAAS,IAFV,mBAE5BC,EAF4B,KAEhBC,EAFgB,KAcnC,OACI,sBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFJ,EAAWK,OAAOC,OAAS,GAAMR,GAAY,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,QAKrE,SACI,uBACIC,KAAK,OACLC,MAAOT,EACPU,SAfc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,8BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEII,MAAMF,GAFV,cAEbG,EAFa,gBAGIA,EAASC,OAHb,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,YAClB,MAAO,CACHC,GAFwE,EAAvDA,GAGjBC,MAHwE,EAAnDA,MAIrBT,IAJwE,EAA5CU,OAAUC,iBAAoBX,QAL/C,kBAYZM,GAZY,4CAAH,sDCaLM,EAVK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAE9B,OACI,sBAAKa,UAAU,uDAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCYDO,EAhBC,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACZd,mBAAS,CAAEqB,KAAM,GAAIY,SAAS,IADlB,mBAC/BC,EAD+B,KACxBC,EADwB,KAOtC,OAJAC,qBAAU,WACNvB,EAAQC,GAAUuB,MAAK,SAAAC,GAAI,OAAIH,EAAS,2BAAID,GAAL,IAAYb,KAAMiB,EAAML,SAAS,UACzE,CAACnB,EAAUoB,IAEPA,EDJiBK,CAAazB,GAA9BO,EAFuB,EAEvBA,KAAMY,EAFiB,EAEjBA,QAEb,OACI,qCACI,qBAAIJ,UAAU,mDAAd,cAAmEf,KAClEmB,GAAW,mBAAGJ,UAAU,oCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACKR,EAAKE,KAAI,SAAAiB,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEgBxCiB,EAzBM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJC,EAFI,KASvB,OACI,qCACI,8CACA,cAAC,EAAD,CAAa5C,YAAa4C,IAC1B,uBACCD,EAAWnB,KAAI,SAAAT,GAAQ,OAChB,cAAC,EAAD,CAEAA,SAAUA,GADLA,MAIb,2B,YClBZ8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.944d7c89.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        inputValue.trim().length > 0  && setCategory(cats => [inputValue, ...cats])\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=0xTRluEoUrM7EIfwEEFd4qvUm7V7gOju`\r\n    const response = await fetch(url)\r\n    const { data } = await response.json()\r\n\r\n    const gifs = data.map(({ id, title, images: { downsized_medium: { url } } }) => {\r\n        return {\r\n            id,\r\n            title,\r\n            url\r\n        }\r\n    })\r\n    return gifs\r\n}","import React from 'react'\r\n\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    // console.log(id, title, url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__slow\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const {data, loading} = useFetchGifs(category)\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\" animate__animated animate__fadeIn animate__slow\"> {category}</h3>\r\n            {loading && <p className=\" animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {data.map(img => <GifGridItem key={img.id} {...img} />)}\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({ data: [], loading: true })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs => setState({...state, data: imgs, loading: false}))\r\n    }, [category, state])\r\n\r\n    return state\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Shingeki no Kyojin'])\r\n    // setCategories(cats => [...cats, 'Shingeki no Kyojin'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategory={setCategories} />\r\n            <hr />\r\n            {categories.map(category => (\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category} />\r\n                ))\r\n            }\r\n            <ul></ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport 'animate.css'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}